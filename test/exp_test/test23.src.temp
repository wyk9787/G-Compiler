let fact (n : int) : int = 
  if (n > 0) 
  then n * (fact (n-1))
  else 1
;;

let max2 (x : int, y : int) : int = 
  if x > y 
  then x
  else y
;;


let proc (a : unit): int = 
  let res: <int * float> = ref ( (0, 0.0) ) in
  let l : <{int * float}> = ref ( (1, 2.0) :: (3, 4.0) :: (5, 6.0) :: {} : int * float) in
  let counter : <int> = ref (0) in
  while (!(counter) < 3) do
    res := (fst(!(res)) + fst(car(!(l))),  snd(!(res)) + snd(car(!(l))));
    l := cdr(!(l));
    counter := !(counter) + 1
  end;
  fst(!(res)) + (fact 5) + (max2 3 4)
;;

let main (a : int) : int =
  (proc ())
;;
