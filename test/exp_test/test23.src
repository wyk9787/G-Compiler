#include <language/lib/math.glib>

let proc (a : unit): int =
  let res: <int * int> = ref ( (0, 0) ) in
  let l : <{int * int}> = ref ( (1, 2) :: (3, 4) :: (5, 6) :: {} : int * int) in
  let counter : <int> = ref (0) in
  while ((!counter) < 3) do
    res := (fst(!res) + fst(car(!l)),  snd(!res) + snd(car(!l)));
    l := cdr(!l);
    counter := (!counter) + 1
  end;
  fst(!res) + (fact 5) + (max2 3 4)
;;

let main (a : int) : int =
  (proc ())
;;
