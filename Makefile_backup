# Copied from http://www.partow.net/programming/makefile/idx.html

CXX       	 := clang++
CXXFLAGS 	   := -std=c++11
LDFLAGS      := -L/usr/lib -lstdc++ -lm
BUILD        := ./build
OBJ_DIR      := $(BUILD)/objects
APP_DIR      := $(BUILD)/apps
LEX_OUTPUT   := src/scanner.yy.cpp
BISON_OUTPUT := src/parser.yy.cpp
BISON_AUX    := src/location.hh src/parser.yy.cpp src/parser.yy.hpp src/position.hh src/stack.hh src/parser.h
TEST_DIR     := ./test
TARGET       := compiler
INCLUDE      := -Iinclude/ -Isrc/
SRC          := $(wildcard src/*.cpp) $(LEX_OUTPUT) $(BISON_OUTPUT)

all: build scanner.yy.cpp parser.yy.cpp $(APP_DIR)/$(TARGET)

OBJECTS := $(SRC:%.cpp=$(OBJ_DIR)/%.o)

$(OBJ_DIR)/%.o: %.cpp
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $(INCLUDE) -o $@ -c $<

$(APP_DIR)/$(TARGET): $(OBJECTS)
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $(INCLUDE) $(LDFLAGS) -o $(APP_DIR)/$(TARGET) $(OBJECTS)

scanner.yy.cpp : src/scanner.l
	flex  -o src/$@ $<

parser.yy.cpp : src/parser.yy
	bison -o src/$@ $<

.PHONY: all generate test build clean debug release

generate: lex.l parse.yy stack.hh parse.tab.hh
		bison -d parse.yy
		flex lex.l
		$(CXX) $(CXXFLAGS) $(INCLUDE) $(LDFLAGS) -o parse parse.tab.cc lex.yy.c

test:
	$(TEST_DIR)/test.sh

build:
	@mkdir -p $(APP_DIR)
	@mkdir -p $(OBJ_DIR)

debug: CXXFLAGS += -DDEBUG -g
debug: all

release: CXXFLAGS += -O2
release: all

clean:
	-@rm -rf $(OBJ_DIR)/*
	-@rm -rf $(APP_DIR)/*
	-@rm -rf $(TEST_DIR)/*_o.out
	-@rm -rf ${BISON_OUTPUT} ${BISON_AUX}
	-@rm -rf ${LEX_OUTPUT}
